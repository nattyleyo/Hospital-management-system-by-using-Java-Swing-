/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package GUI.DoctorSide;

import GUI.LoginPanel;
import java.awt.Color;
import java.sql.Connection;
import java.sql.Date;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.sql.Time;
import java.time.LocalDate;
import java.time.LocalTime;
import java.time.Month;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.JTableHeader;

/**
 *
 * @author HP
 */
public class Appointment_Schedule extends javax.swing.JPanel {
 private Connection conn;
    private Statement stmt;
    private PreparedStatement pstmt;
    private ResultSet rs;
    /**
     * Creates new form AdminEmployeed
     */
      public Appointment_Schedule() {
        initComponents();
           JTableHeader tableHeader=patienstTable.getTableHeader();
        tableHeader.setForeground(new Color(204,255,255));
        tableHeader.setBackground(new Color(82,2,31));
        
        try{
            Class.forName("com.mysql.cj.jdbc.Driver");
        String url = "jdbc:mysql://localhost:3306/HMS_DB";
        String username = "mahnat";
        String password = "mahnat2023";
        conn = DriverManager.getConnection(url, username, password);

        stmt = conn.createStatement();
        String createTableQuery="CREATE TABLE if not exists Appointment (" +
                                "  appointmentId int auto_increment PRIMARY KEY," +
                                "  dateOFAppointment DATE," +
                                "  timeOfAppointment TIME," +
                                "  patientId int," +
                                "  doctorId int," +
                                "appointmentStatus Varchar(30),"+
                                "  FOREIGN KEY (patientId) REFERENCES Patient(patientId)," +
                                "  FOREIGN KEY (doctorId) REFERENCES Doctor(doctorId)" +
                                ");";
        stmt.executeUpdate(createTableQuery);    
           
       
        stmt.close();
        conn.close();
        }catch(ClassNotFoundException | SQLException e){
            System.out.println(e);
        }
         fetchToAppointmentList();
    }
   

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        content = new GUI.CustomStyle.Panel();
        panel1 = new GUI.CustomStyle.Panel();
        search_field = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        panel6 = new GUI.CustomStyle.Panel();
        jLabel1 = new javax.swing.JLabel();
        panel7 = new GUI.CustomStyle.Panel();
        jScrollPane1 = new javax.swing.JScrollPane();
        patienstTable = new javax.swing.JTable();
        panel8 = new GUI.CustomStyle.Panel();
        panel9 = new GUI.CustomStyle.Panel();
        jLabel3 = new javax.swing.JLabel();
        newButton = new GUI.CustomStyle.MyButton();
        btn_Schedule = new GUI.CustomStyle.MyButton();
        panel14 = new GUI.CustomStyle.Panel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        panel11 = new GUI.CustomStyle.Panel();
        patientID_textfield = new javax.swing.JTextField();
        panel12 = new GUI.CustomStyle.Panel();
        patientName_textfield = new javax.swing.JTextField();
        panel18 = new GUI.CustomStyle.Panel();
        Appoint_IdTextfield = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        second_spin = new javax.swing.JSpinner();
        min_spin = new javax.swing.JSpinner();
        hour_spin = new javax.swing.JSpinner();
        year_spin = new javax.swing.JSpinner();
        moonth_spin = new javax.swing.JSpinner();
        day_spin = new javax.swing.JSpinner();
        btn_Cancel1 = new GUI.CustomStyle.MyButton();

        setBackground(new java.awt.Color(0, 51, 51));

        content.setBackground(new java.awt.Color(190, 247, 255));
        content.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        panel1.setBackground(new java.awt.Color(255, 255, 255));
        panel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        search_field.setBorder(null);
        search_field.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                search_fieldFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                search_fieldFocusLost(evt);
            }
        });
        search_field.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                search_fieldActionPerformed(evt);
            }
        });
        search_field.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                search_fieldKeyReleased(evt);
            }
        });
        panel1.add(search_field, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 0, 600, 40));

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/search.png"))); // NOI18N
        panel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 6, 26, 28));

        content.add(panel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 20, 660, 40));

        jLabel8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/medical-appointments.png"))); // NOI18N
        jLabel8.setText("jLabel8");
        content.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 70, 70, -1));

        panel6.setBackground(new java.awt.Color(20, 9, 148));
        panel6.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(204, 255, 255));
        jLabel1.setText("Appointment Scheduling");
        panel6.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 0, 270, 40));

        content.add(panel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 90, 380, 40));

        panel7.setBackground(new java.awt.Color(255, 204, 204));

        patienstTable.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        patienstTable.setForeground(new java.awt.Color(51, 51, 51));
        patienstTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "AppId", "PatientID", "PatientName", "LocalDate", "LocalTime", "Appointment_Status"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        patienstTable.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        patienstTable.setEditingColumn(0);
        patienstTable.setEditingRow(0);
        patienstTable.setFocusable(false);
        patienstTable.setGridColor(new java.awt.Color(204, 204, 255));
        patienstTable.setOpaque(false);
        patienstTable.setRowHeight(25);
        patienstTable.setSelectionBackground(new java.awt.Color(255, 239, 235));
        patienstTable.setSelectionForeground(new java.awt.Color(0, 51, 255));
        patienstTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                patienstTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(patienstTable);

        javax.swing.GroupLayout panel7Layout = new javax.swing.GroupLayout(panel7);
        panel7.setLayout(panel7Layout);
        panel7Layout.setHorizontalGroup(
            panel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panel7Layout.createSequentialGroup()
                .addContainerGap(16, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 700, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(14, 14, 14))
        );
        panel7Layout.setVerticalGroup(
            panel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panel7Layout.createSequentialGroup()
                .addContainerGap(23, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 533, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(14, 14, 14))
        );

        content.add(panel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 150, 730, 570));

        panel8.setBackground(new java.awt.Color(255, 204, 204));
        panel8.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        panel9.setBackground(new java.awt.Color(82, 2, 31));

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(204, 255, 255));
        jLabel3.setText("Appointment--->Data");

        javax.swing.GroupLayout panel9Layout = new javax.swing.GroupLayout(panel9);
        panel9.setLayout(panel9Layout);
        panel9Layout.setHorizontalGroup(
            panel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel9Layout.createSequentialGroup()
                .addGap(51, 51, 51)
                .addComponent(jLabel3)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        panel9Layout.setVerticalGroup(
            panel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panel9Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        panel8.add(panel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 240, 40));

        newButton.setBackground(new java.awt.Color(23, 169, 232));
        newButton.setBorder(null);
        newButton.setForeground(new java.awt.Color(255, 255, 255));
        newButton.setText("New");
        newButton.setBorderColor(new java.awt.Color(255, 204, 204));
        newButton.setColor(new java.awt.Color(23, 169, 232));
        newButton.setColorClick(new java.awt.Color(23, 133, 232));
        newButton.setColorOver(new java.awt.Color(0, 133, 218));
        newButton.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        newButton.setRadius(20);
        newButton.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                newButtonMouseMoved(evt);
            }
        });
        newButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newButtonActionPerformed(evt);
            }
        });
        panel8.add(newButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 490, 110, 37));

        btn_Schedule.setBackground(new java.awt.Color(23, 169, 232));
        btn_Schedule.setBorder(null);
        btn_Schedule.setForeground(new java.awt.Color(255, 255, 255));
        btn_Schedule.setText("SCHEDULE");
        btn_Schedule.setBorderColor(new java.awt.Color(255, 204, 204));
        btn_Schedule.setColor(new java.awt.Color(23, 169, 232));
        btn_Schedule.setColorClick(new java.awt.Color(23, 133, 232));
        btn_Schedule.setColorOver(new java.awt.Color(0, 133, 218));
        btn_Schedule.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btn_Schedule.setRadius(20);
        btn_Schedule.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                btn_ScheduleMouseMoved(evt);
            }
        });
        btn_Schedule.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_ScheduleActionPerformed(evt);
            }
        });
        panel8.add(btn_Schedule, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 440, 220, 37));

        panel14.setBackground(new java.awt.Color(247, 247, 247));

        javax.swing.GroupLayout panel14Layout = new javax.swing.GroupLayout(panel14);
        panel14.setLayout(panel14Layout);
        panel14Layout.setHorizontalGroup(
            panel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        panel14Layout.setVerticalGroup(
            panel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        panel8.add(panel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 70, 220, -1));

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(51, 0, 0));
        jLabel4.setText("PatientID");
        panel8.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 110, 80, 20));

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(51, 0, 0));
        jLabel5.setText("PatientName");
        panel8.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 160, 80, 20));

        jLabel7.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(51, 0, 0));
        jLabel7.setText("AppointmentID");
        panel8.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 60, -1, 20));

        panel11.setBackground(new java.awt.Color(247, 247, 247));
        panel11.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        patientID_textfield.setEditable(false);
        patientID_textfield.setBackground(new java.awt.Color(247, 247, 247));
        patientID_textfield.setBorder(null);
        patientID_textfield.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        patientID_textfield.setOpaque(true);
        patientID_textfield.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                patientID_textfieldFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                patientID_textfieldFocusLost(evt);
            }
        });
        panel11.add(patientID_textfield, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 0, 180, 30));

        panel8.add(panel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 130, 200, 30));

        panel12.setBackground(new java.awt.Color(247, 247, 247));
        panel12.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        patientName_textfield.setEditable(false);
        patientName_textfield.setBackground(new java.awt.Color(247, 247, 247));
        patientName_textfield.setBorder(null);
        patientName_textfield.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        patientName_textfield.setOpaque(true);
        patientName_textfield.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                patientName_textfieldFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                patientName_textfieldFocusLost(evt);
            }
        });
        panel12.add(patientName_textfield, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 0, 180, 30));

        panel8.add(panel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 180, 200, -1));

        panel18.setBackground(new java.awt.Color(247, 247, 247));
        panel18.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        Appoint_IdTextfield.setEditable(false);
        Appoint_IdTextfield.setBackground(new java.awt.Color(247, 247, 247));
        Appoint_IdTextfield.setBorder(null);
        Appoint_IdTextfield.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        Appoint_IdTextfield.setOpaque(true);
        Appoint_IdTextfield.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                Appoint_IdTextfieldFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                Appoint_IdTextfieldFocusLost(evt);
            }
        });
        panel18.add(Appoint_IdTextfield, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 0, 180, 30));

        panel8.add(panel18, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 80, 200, -1));

        jLabel10.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(51, 0, 0));
        jLabel10.setText("LocalDate");
        panel8.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 210, 80, 20));

        jLabel16.setFont(new java.awt.Font("Segoe UI", 1, 10)); // NOI18N
        jLabel16.setForeground(new java.awt.Color(51, 0, 0));
        jLabel16.setText("Day");
        panel8.add(jLabel16, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 240, 40, 20));

        jLabel17.setFont(new java.awt.Font("Segoe UI", 1, 10)); // NOI18N
        jLabel17.setForeground(new java.awt.Color(51, 0, 0));
        jLabel17.setText("Month");
        panel8.add(jLabel17, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 240, 40, 20));

        jLabel14.setFont(new java.awt.Font("Segoe UI", 1, 10)); // NOI18N
        jLabel14.setForeground(new java.awt.Color(51, 0, 0));
        jLabel14.setText("Year");
        panel8.add(jLabel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 240, 40, 20));

        jLabel6.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(51, 0, 0));
        jLabel6.setText("LocalTime");
        panel8.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 310, 80, 20));

        jLabel15.setFont(new java.awt.Font("Segoe UI", 1, 10)); // NOI18N
        jLabel15.setForeground(new java.awt.Color(51, 0, 0));
        jLabel15.setText("Hour");
        panel8.add(jLabel15, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 340, 40, 20));

        jLabel9.setFont(new java.awt.Font("Segoe UI", 1, 10)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(51, 0, 0));
        jLabel9.setText("Minute");
        panel8.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 340, 40, 20));

        jLabel12.setFont(new java.awt.Font("Segoe UI", 1, 10)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(51, 0, 0));
        jLabel12.setText("Second");
        panel8.add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 340, 40, 20));

        second_spin.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        second_spin.setModel(new javax.swing.SpinnerNumberModel(0, 0, 59, 1));
        second_spin.setBorder(null);
        second_spin.setOpaque(true);
        panel8.add(second_spin, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 360, 70, 40));

        min_spin.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        min_spin.setModel(new javax.swing.SpinnerNumberModel(0, 0, 59, 1));
        min_spin.setBorder(null);
        min_spin.setOpaque(true);
        panel8.add(min_spin, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 360, 70, 40));

        hour_spin.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        hour_spin.setModel(new javax.swing.SpinnerNumberModel(0, 0, 23, 1));
        hour_spin.setBorder(null);
        hour_spin.setOpaque(true);
        panel8.add(hour_spin, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 360, 70, 40));

        year_spin.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        year_spin.setModel(new javax.swing.SpinnerNumberModel(2015, 2015, 2025, 1));
        year_spin.setBorder(null);
        year_spin.setOpaque(true);
        panel8.add(year_spin, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 260, 70, 40));

        moonth_spin.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        moonth_spin.setModel(new javax.swing.SpinnerNumberModel(1, 1, 12, 1));
        moonth_spin.setBorder(null);
        moonth_spin.setOpaque(true);
        panel8.add(moonth_spin, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 260, 70, 40));

        day_spin.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        day_spin.setModel(new javax.swing.SpinnerNumberModel(1, 1, 30, 1));
        day_spin.setBorder(null);
        day_spin.setOpaque(true);
        panel8.add(day_spin, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 260, 70, 40));

        btn_Cancel1.setBackground(new java.awt.Color(23, 169, 232));
        btn_Cancel1.setBorder(null);
        btn_Cancel1.setForeground(new java.awt.Color(255, 255, 255));
        btn_Cancel1.setText("CANCEL");
        btn_Cancel1.setBorderColor(new java.awt.Color(255, 204, 204));
        btn_Cancel1.setColor(new java.awt.Color(23, 169, 232));
        btn_Cancel1.setColorClick(new java.awt.Color(23, 133, 232));
        btn_Cancel1.setColorOver(new java.awt.Color(0, 133, 218));
        btn_Cancel1.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btn_Cancel1.setRadius(20);
        btn_Cancel1.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                btn_Cancel1MouseMoved(evt);
            }
        });
        btn_Cancel1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_Cancel1ActionPerformed(evt);
            }
        });
        panel8.add(btn_Cancel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 490, 110, 37));

        content.add(panel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 170, 250, 550));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(content, javax.swing.GroupLayout.PREFERRED_SIZE, 1041, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(content, javax.swing.GroupLayout.DEFAULT_SIZE, 732, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void search_fieldFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_search_fieldFocusGained
        //Search_placeholder.setText("");
    }//GEN-LAST:event_search_fieldFocusGained

    private void search_fieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_search_fieldFocusLost
        // TODO add your handling code here:
//        Search_placeholder.setForeground(new java.awt.Color(187,187,187));
//        Search_placeholder.setFont(new java.awt.Font("Segoe UI", 0, 14));
//        Search_placeholder.setText("Search anything here . . . .");

    }//GEN-LAST:event_search_fieldFocusLost

    private void search_fieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_search_fieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_search_fieldActionPerformed

    private void newButtonMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_newButtonMouseMoved
        // TODO add your handling code here:
        newButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
    }//GEN-LAST:event_newButtonMouseMoved

    private void btn_ScheduleMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn_ScheduleMouseMoved
        // TODO add your handling code here:
        btn_Schedule.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
    }//GEN-LAST:event_btn_ScheduleMouseMoved

    private void patientID_textfieldFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_patientID_textfieldFocusGained

       // fullname_placeholder.setText("");
    }//GEN-LAST:event_patientID_textfieldFocusGained

    private void patientID_textfieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_patientID_textfieldFocusLost
        // TODO add your handling code here:
//        fullname_placeholder.setForeground(new java.awt.Color(187,187,187));
//        fullname_placeholder.setFont(new java.awt.Font("Segoe UI", 0, 14));
//        fullname_placeholder.setText("fullname");
    }//GEN-LAST:event_patientID_textfieldFocusLost

    private void patientName_textfieldFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_patientName_textfieldFocusGained
        // TODO add your handling code here:
      //  username_placeholder.setText("");
    }//GEN-LAST:event_patientName_textfieldFocusGained

    private void patientName_textfieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_patientName_textfieldFocusLost
        // TODO add your handling code here:
//        username_placeholder.setForeground(new java.awt.Color(187,187,187));
//        username_placeholder.setFont(new java.awt.Font("Segoe UI", 0, 14));
//        username_placeholder.setText("username");
    }//GEN-LAST:event_patientName_textfieldFocusLost

    private void Appoint_IdTextfieldFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_Appoint_IdTextfieldFocusGained
     
    }//GEN-LAST:event_Appoint_IdTextfieldFocusGained

    private void Appoint_IdTextfieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_Appoint_IdTextfieldFocusLost
        
    }//GEN-LAST:event_Appoint_IdTextfieldFocusLost

    private void btn_ScheduleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_ScheduleActionPerformed
        int row=patienstTable.getSelectedRow();
        if(row>=0){
            int year=(Integer)year_spin.getValue();
            int month=(Integer)moonth_spin.getValue();
            int day=(Integer)day_spin.getValue();   
            int hour=(Integer)hour_spin.getValue();
            int miniute=(Integer)min_spin.getValue();
            int second=(Integer)second_spin.getValue();
        if(year == 0||month == 0||day == 0|| miniute == 0||hour == 0||second == 0 ){
           JOptionPane.showMessageDialog(this, "Some Data is missing \nplease provide complete information!!.", "Alert", JOptionPane.WARNING_MESSAGE);
        }else{
            try {
             
                LocalDate date=LocalDate.of(year, month, day);
                LocalTime time=LocalTime.of(hour,miniute,second);
                String url = "jdbc:mysql://localhost:3306/HMS_DB";
                String username = "mahnat";
                String passwordDB = "mahnat2023";
                conn = DriverManager.getConnection(url, username, passwordDB);
                String sql1="UPDATE APPOINTMENT SET dateOfAppointment=?, timeOfAppointment=?,appointmentStatus=? where appointmentId=?";
                pstmt=conn.prepareStatement(sql1);
                pstmt.setDate(1, Date.valueOf(date));
                pstmt.setTime(2, Time.valueOf(time));
                pstmt.setString(3, "Approved");
                pstmt.setInt(4, Integer.parseInt(Appoint_IdTextfield.getText().substring(2, 6)));
                pstmt.executeUpdate();
                fetchToAppointmentList();
                day_spin.setValue(0);
               moonth_spin.setValue(0);
               year_spin.setValue(0);
               second_spin.setValue(0);
               min_spin.setValue(0);
               hour_spin.setValue(0);            
               Appoint_IdTextfield.setText("");
               patientID_textfield.setText("");
               patientName_textfield.setText("");
                pstmt.close();
                conn.close();
            }catch(SQLException e){
                System.out.println(e);
            }
        }
       }else if(row<0){
               JOptionPane.showMessageDialog(this, "No rows selected please select a row!!", "Select a row", JOptionPane.WARNING_MESSAGE);
           }
    }//GEN-LAST:event_btn_ScheduleActionPerformed

    private void btn_Cancel1MouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn_Cancel1MouseMoved
        // TODO add your handling code here:
    }//GEN-LAST:event_btn_Cancel1MouseMoved

    private void patienstTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_patienstTableMouseClicked
        // TODO add your handling code here:
        int row = patienstTable.getSelectedRow();
        if(row>=0){
            String appID=(String)patienstTable.getValueAt(row, 0);
            String patientId=(String)patienstTable.getValueAt(row, 1);
            String name=String.valueOf(patienstTable.getValueAt(row, 2));
            LocalDate ld=(LocalDate)patienstTable.getValueAt(row, 3);
            day_spin.setValue((Object)ld.getDayOfMonth());
            moonth_spin.setValue((Object)ld.getMonthValue());
            year_spin.setValue((Object)ld.getYear());
            LocalTime lt=(LocalTime)patienstTable.getValueAt(row, 4);
            second_spin.setValue((Object)lt.getSecond());
            min_spin.setValue((Object)lt.getMinute());
            hour_spin.setValue((Object)lt.getHour());            
            Appoint_IdTextfield.setText(appID);
            patientID_textfield.setText(patientId);
            patientName_textfield.setText(name);
            }
    }//GEN-LAST:event_patienstTableMouseClicked

    private void newButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newButtonActionPerformed
        // TODO add your handling code here:
         day_spin.setValue(0);
            moonth_spin.setValue(0);
            year_spin.setValue(0);
            second_spin.setValue(0);
            min_spin.setValue(0);
            hour_spin.setValue(0);            
            Appoint_IdTextfield.setText("");
            patientID_textfield.setText("");
            patientName_textfield.setText("");
    }//GEN-LAST:event_newButtonActionPerformed

    private void btn_Cancel1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_Cancel1ActionPerformed
        // TODO add your handling code here:
        int row=patienstTable.getSelectedRow();
        if(row>=0){
           int result=JOptionPane.showConfirmDialog(this, "Are you sure you want to canel your appointment?","Cancel Appointment",JOptionPane.YES_NO_OPTION,JOptionPane.QUESTION_MESSAGE);
           if(result==JOptionPane.YES_OPTION){
               
               try {
                   String url = "jdbc:mysql://localhost:3306/HMS_DB";
                   String username = "mahnat";
                   String passwordDB = "mahnat2023";
                   conn = DriverManager.getConnection(url, username, passwordDB);
                   pstmt=conn.prepareStatement("update Appointment set appointmentStatus=? where appointmentId=?");
                   pstmt.setString(1, "Canceled");
                   pstmt.setInt(2, Integer.parseInt(String.valueOf(patienstTable.getValueAt(row, 0)).substring(2, 6)));
                   pstmt.executeUpdate();
                   fetchToAppointmentList();
               } catch (SQLException e) {
                   System.out.println(e);        
               }
                
           }else if(row<0){
               JOptionPane.showMessageDialog(this, "No rows selected please select a row!!", "Select a row", JOptionPane.WARNING_MESSAGE);
           }
        }
    }//GEN-LAST:event_btn_Cancel1ActionPerformed

    private void search_fieldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_search_fieldKeyReleased
        // TODO add your handling code here:
         if (search_field.getText().length() != 0) {
                try {
                     String url = "jdbc:mysql://localhost:3306/HMS_DB";
                     String username = "mahnat";
                     String passwordDB = "mahnat2023";
                     conn = DriverManager.getConnection(url, username, passwordDB);
                    String searchText = search_field.getText();
                   
          
           String sql="SELECT A.appointmentId,A.patientId,P.name,A.dateOFAppointment,A.timeOfAppointment,A.appointmentStatus from Appointment A join doctor D on A.doctorID=D.doctorId join Person P on A.patientId=P.personId where appointmentStatus Like (?) or P.name like ?";
            pstmt=conn.prepareStatement(sql);
            pstmt.setString(1, searchText+"%");
            pstmt.setString(2, searchText+"%");
            rs = pstmt.executeQuery();
            
           DefaultTableModel model = new DefaultTableModel() {
                @Override
                public boolean isCellEditable(int row, int column) {
                    return false; // Make all cells non-editable
                }
            };
            model.addColumn("AppId");
            model.addColumn("PatientID");
            model.addColumn("PatientName");                        
            model.addColumn("LocalDate");
            model.addColumn("LocalTime");
            model.addColumn("Appointment_Status");
          

        while (rs.next()) {
            int ApId=rs.getInt(1);
            String ApIdStr="";
            if (ApId < 10) {
                ApIdStr += "AP000" + ApId + "/15";
            } else if (ApId < 100 && ApId >= 10) {
                ApIdStr += "AP00" + ApId + "/15";
            } else if (ApId < 1000 && ApId >= 100) {
                ApIdStr += "AP0" + ApId + "/15";
            } 
            int staffId=rs.getInt(2);
            String staffIdStr="";
            if (staffId < 10) {
                staffIdStr += "D000" + staffId + "/15";
            } else if (staffId < 100 && staffId >= 10) {
                staffIdStr += "D00" + staffId + "/15";
            } else if (staffId < 1000 && staffId >= 100) {
                staffIdStr += "D0" + staffId + "/15";
            } 
            String DoctName=rs.getString(3);
            LocalDate date=rs.getDate(4).toLocalDate();
            LocalTime time=rs.getTime(5).toLocalTime();;
            String Appoint_status=rs.getString(6);
            
            model.addRow(new Object[]{ApIdStr,staffIdStr,DoctName,date,time,Appoint_status});
        }

        patienstTable.setModel(model);
            rs.close();
            pstmt.close();
            conn.close();
            } catch (SQLException e) {
                System.out.println(e);
            }
        } else {
                fetchToAppointmentList();
        }
    }//GEN-LAST:event_search_fieldKeyReleased

      public void fetchToAppointmentList() {
        try {
             String url = "jdbc:mysql://localhost:3306/HMS_DB";
             String username = "mahnat";
             String passwordDB = "mahnat2023";
            conn = DriverManager.getConnection(url, username, passwordDB);
            stmt = conn.createStatement();
            String sql="SELECT A.appointmentId,A.patientId,P.name,A.dateOFAppointment,A.timeOfAppointment,A.appointmentStatus from Appointment A join doctor D on A.doctorID=D.doctorId join Person P on A.patientId=P.personId where A.doctorId="+LoginPanel.logedId;
           
 
            rs = stmt.executeQuery(sql);

            DefaultTableModel model = new DefaultTableModel() {
                @Override
                public boolean isCellEditable(int row, int column) {
                    return false; // Make all cells non-editable
                }
            };
            model.addColumn("AppId");
            model.addColumn("PatientID");
            model.addColumn("PatientName");                        
            model.addColumn("LocalDate");
            model.addColumn("LocalTime");
            model.addColumn("Appointment_Status");
          

        while (rs.next()) {
            int ApId=rs.getInt(1);
            String ApIdStr="";
            if (ApId < 10) {
                ApIdStr += "AP000" + ApId + "/15";
            } else if (ApId < 100 && ApId >= 10) {
                ApIdStr += "AP00" + ApId + "/15";
            } else if (ApId < 1000 && ApId >= 100) {
                ApIdStr += "AP0" + ApId + "/15";
            } 
            int staffId=rs.getInt(2);
            String staffIdStr="";
            if (staffId < 10) {
                staffIdStr += "P000" + staffId + "/15";
            } else if (staffId < 100 && staffId >= 10) {
                staffIdStr += "P00" + staffId + "/15";
            } else if (staffId < 1000 && staffId >= 100) {
                staffIdStr += "P0" + staffId + "/15";
            } 
            String DoctName=rs.getString(3);
            LocalDate date=rs.getDate(4).toLocalDate();
            LocalTime time=rs.getTime(5).toLocalTime();
            String Appoint_status=rs.getString(6);
            
            model.addRow(new Object[]{ApIdStr,staffIdStr,DoctName,date,time,Appoint_status});
        }

        patienstTable.setModel(model);
        rs.close();
        stmt.close();
        conn.close();
        } catch (SQLException e) {
            System.out.println(e);
        }
       
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField Appoint_IdTextfield;
    private GUI.CustomStyle.MyButton btn_Cancel1;
    private GUI.CustomStyle.MyButton btn_Schedule;
    private GUI.CustomStyle.Panel content;
    private javax.swing.JSpinner day_spin;
    private javax.swing.JSpinner hour_spin;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSpinner min_spin;
    private javax.swing.JSpinner moonth_spin;
    private GUI.CustomStyle.MyButton newButton;
    private GUI.CustomStyle.Panel panel1;
    private GUI.CustomStyle.Panel panel11;
    private GUI.CustomStyle.Panel panel12;
    private GUI.CustomStyle.Panel panel14;
    private GUI.CustomStyle.Panel panel18;
    private GUI.CustomStyle.Panel panel6;
    private GUI.CustomStyle.Panel panel7;
    private GUI.CustomStyle.Panel panel8;
    private GUI.CustomStyle.Panel panel9;
    private javax.swing.JTable patienstTable;
    private javax.swing.JTextField patientID_textfield;
    private javax.swing.JTextField patientName_textfield;
    private javax.swing.JTextField search_field;
    private javax.swing.JSpinner second_spin;
    private javax.swing.JSpinner year_spin;
    // End of variables declaration//GEN-END:variables
}
