/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package GUI.AdminSide;

import GUI.CharacterOnlyFilter;
import GUI.DoubleOnlyFilter;
import GUI.NumberOnlyFilter;
import GUI.PhoneNumberFilter;
import java.awt.Color;
import java.sql.*;
import javax.swing.ButtonGroup;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.JTableHeader;
import javax.swing.text.PlainDocument;

/**
 *
 * @author HP
 */
public class Admin_Emp_Receptionists extends javax.swing.JPanel {

    private Connection conn;
    private Statement stmt;
    private PreparedStatement pstmt;
    private ResultSet rs;
    /**
     * Creates new form AdminEmployeed
     */
    public Admin_Emp_Receptionists() {
        initComponents();
         JTableHeader tableHeader=receptionistsTable.getTableHeader();
        tableHeader.setForeground(new Color(204,255,255));
        tableHeader.setBackground(new Color(82,2,31));
        staffIdTextField.setEditable(false);
        passwordTextField.setText("12345678");
        
        try{
            Class.forName("com.mysql.cj.jdbc.Driver");
        String url = "jdbc:mysql://localhost:3306/HMS_DB";
        String username = "mahnat";
        String password = "mahnat2023";
        conn = DriverManager.getConnection(url, username, password);

        stmt = conn.createStatement();
        String createTableQuery="CREATE TABLE if not exists Receptionist ("
                    +"  staffId INT auto_increment PRIMARY KEY," 
                    +"  FOREIGN KEY (staffId) REFERENCES Staff(staffId)" 
                   +");";
        stmt.executeUpdate(createTableQuery);        
        
         fetchFromTable();
        stmt.close();
        conn.close();
        }catch(ClassNotFoundException | SQLException e){
            System.out.println(e);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        content = new GUI.CustomStyle.Panel();
        panel1 = new GUI.CustomStyle.Panel();
        serchTextField = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        panel7 = new GUI.CustomStyle.Panel();
        jScrollPane1 = new javax.swing.JScrollPane();
        receptionistsTable = new javax.swing.JTable();
        panel8 = new GUI.CustomStyle.Panel();
        panel9 = new GUI.CustomStyle.Panel();
        jLabel3 = new javax.swing.JLabel();
        deleteReceptionistButton = new GUI.CustomStyle.MyButton();
        updateReceptionistButton = new GUI.CustomStyle.MyButton();
        newReceptionistButton = new GUI.CustomStyle.MyButton();
        addReceptionistButton = new GUI.CustomStyle.MyButton();
        panel14 = new GUI.CustomStyle.Panel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        panel11 = new GUI.CustomStyle.Panel();
        staffIdTextField = new javax.swing.JTextField();
        panel12 = new GUI.CustomStyle.Panel();
        fullnameTextField = new javax.swing.JTextField();
        panel13 = new GUI.CustomStyle.Panel();
        passwordTextField = new javax.swing.JTextField();
        panel18 = new GUI.CustomStyle.Panel();
        ageTextField = new javax.swing.JTextField();
        panel20 = new GUI.CustomStyle.Panel();
        phoneTextField = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        panel21 = new GUI.CustomStyle.Panel();
        salaryTextField = new javax.swing.JTextField();
        maleRadioButton = new javax.swing.JRadioButton();
        femaleRadioButton = new javax.swing.JRadioButton();
        panel6 = new GUI.CustomStyle.Panel();
        jLabel1 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();

        setForeground(new java.awt.Color(51, 255, 102));
        setMinimumSize(new java.awt.Dimension(930, 740));
        setPreferredSize(new java.awt.Dimension(870, 730));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        content.setBackground(new java.awt.Color(190, 247, 255));
        content.setPreferredSize(new java.awt.Dimension(870, 730));
        content.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        panel1.setBackground(new java.awt.Color(255, 255, 255));
        panel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        serchTextField.setBorder(null);
        serchTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                serchTextFieldKeyReleased(evt);
            }
        });
        panel1.add(serchTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 0, 600, 40));

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/search.png"))); // NOI18N
        panel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 6, 26, 28));

        content.add(panel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 20, 660, 40));

        panel7.setBackground(new java.awt.Color(255, 204, 204));

        receptionistsTable.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        receptionistsTable.setForeground(new java.awt.Color(51, 51, 51));
        receptionistsTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "StaffId", "FullName", "Age", "Gender", "Phone", "Password", "Salary"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.Integer.class, java.lang.String.class, java.lang.Integer.class, java.lang.Object.class, java.lang.Double.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        receptionistsTable.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        receptionistsTable.setEditingColumn(0);
        receptionistsTable.setEditingRow(0);
        receptionistsTable.setFocusable(false);
        receptionistsTable.setGridColor(new java.awt.Color(204, 204, 255));
        receptionistsTable.setOpaque(false);
        receptionistsTable.setRowHeight(25);
        receptionistsTable.setSelectionBackground(new java.awt.Color(255, 239, 235));
        receptionistsTable.setSelectionForeground(new java.awt.Color(0, 51, 255));
        receptionistsTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                receptionistsTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(receptionistsTable);

        javax.swing.GroupLayout panel7Layout = new javax.swing.GroupLayout(panel7);
        panel7.setLayout(panel7Layout);
        panel7Layout.setHorizontalGroup(
            panel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel7Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 598, Short.MAX_VALUE)
                .addContainerGap())
        );
        panel7Layout.setVerticalGroup(
            panel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panel7Layout.createSequentialGroup()
                .addContainerGap(23, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 543, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(14, 14, 14))
        );

        content.add(panel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 150, 610, 580));

        panel8.setBackground(new java.awt.Color(255, 204, 204));
        panel8.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        panel9.setBackground(new java.awt.Color(82, 2, 31));

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(204, 255, 255));
        jLabel3.setText("USERNAME -->Data");

        javax.swing.GroupLayout panel9Layout = new javax.swing.GroupLayout(panel9);
        panel9.setLayout(panel9Layout);
        panel9Layout.setHorizontalGroup(
            panel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel9Layout.createSequentialGroup()
                .addGap(51, 51, 51)
                .addComponent(jLabel3)
                .addContainerGap(52, Short.MAX_VALUE))
        );
        panel9Layout.setVerticalGroup(
            panel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panel9Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        panel8.add(panel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 240, 40));

        deleteReceptionistButton.setBackground(new java.awt.Color(23, 169, 232));
        deleteReceptionistButton.setBorder(null);
        deleteReceptionistButton.setForeground(new java.awt.Color(255, 255, 255));
        deleteReceptionistButton.setText("DELETE");
        deleteReceptionistButton.setBorderColor(new java.awt.Color(255, 204, 204));
        deleteReceptionistButton.setColor(new java.awt.Color(23, 169, 232));
        deleteReceptionistButton.setColorClick(new java.awt.Color(23, 133, 232));
        deleteReceptionistButton.setColorOver(new java.awt.Color(0, 133, 218));
        deleteReceptionistButton.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        deleteReceptionistButton.setRadius(20);
        deleteReceptionistButton.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                deleteReceptionistButtonMouseMoved(evt);
            }
        });
        deleteReceptionistButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteReceptionistButtonActionPerformed(evt);
            }
        });
        panel8.add(deleteReceptionistButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 500, 93, 37));

        updateReceptionistButton.setBackground(new java.awt.Color(23, 169, 232));
        updateReceptionistButton.setBorder(null);
        updateReceptionistButton.setForeground(new java.awt.Color(255, 255, 255));
        updateReceptionistButton.setText("UPDATE");
        updateReceptionistButton.setBorderColor(new java.awt.Color(255, 204, 204));
        updateReceptionistButton.setColor(new java.awt.Color(23, 169, 232));
        updateReceptionistButton.setColorClick(new java.awt.Color(23, 133, 232));
        updateReceptionistButton.setColorOver(new java.awt.Color(0, 133, 218));
        updateReceptionistButton.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        updateReceptionistButton.setRadius(20);
        updateReceptionistButton.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                updateReceptionistButtonMouseMoved(evt);
            }
        });
        updateReceptionistButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateReceptionistButtonActionPerformed(evt);
            }
        });
        panel8.add(updateReceptionistButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 500, 98, 37));

        newReceptionistButton.setBackground(new java.awt.Color(23, 169, 232));
        newReceptionistButton.setBorder(null);
        newReceptionistButton.setForeground(new java.awt.Color(255, 255, 255));
        newReceptionistButton.setText("NEW");
        newReceptionistButton.setBorderColor(new java.awt.Color(255, 204, 204));
        newReceptionistButton.setColor(new java.awt.Color(23, 169, 232));
        newReceptionistButton.setColorClick(new java.awt.Color(23, 133, 232));
        newReceptionistButton.setColorOver(new java.awt.Color(0, 133, 218));
        newReceptionistButton.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        newReceptionistButton.setRadius(20);
        newReceptionistButton.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                newReceptionistButtonMouseMoved(evt);
            }
        });
        newReceptionistButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newReceptionistButtonActionPerformed(evt);
            }
        });
        panel8.add(newReceptionistButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 450, 93, 37));

        addReceptionistButton.setBackground(new java.awt.Color(23, 169, 232));
        addReceptionistButton.setBorder(null);
        addReceptionistButton.setForeground(new java.awt.Color(255, 255, 255));
        addReceptionistButton.setText("ADD");
        addReceptionistButton.setBorderColor(new java.awt.Color(255, 204, 204));
        addReceptionistButton.setColor(new java.awt.Color(23, 169, 232));
        addReceptionistButton.setColorClick(new java.awt.Color(23, 133, 232));
        addReceptionistButton.setColorOver(new java.awt.Color(0, 133, 218));
        addReceptionistButton.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        addReceptionistButton.setRadius(20);
        addReceptionistButton.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                addReceptionistButtonMouseMoved(evt);
            }
        });
        addReceptionistButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addReceptionistButtonActionPerformed(evt);
            }
        });
        panel8.add(addReceptionistButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 450, 98, 37));

        panel14.setBackground(new java.awt.Color(247, 247, 247));

        javax.swing.GroupLayout panel14Layout = new javax.swing.GroupLayout(panel14);
        panel14.setLayout(panel14Layout);
        panel14Layout.setHorizontalGroup(
            panel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 220, Short.MAX_VALUE)
        );
        panel14Layout.setVerticalGroup(
            panel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        panel8.add(panel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 70, 220, -1));

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(51, 0, 0));
        jLabel4.setText("FullName");
        panel8.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 110, 60, 20));

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(51, 0, 0));
        jLabel5.setText("StaffId");
        panel8.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 60, 60, 20));

        jLabel6.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(51, 0, 0));
        jLabel6.setText("Password");
        panel8.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 160, 60, 20));

        jLabel7.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(51, 0, 0));
        jLabel7.setText("Salary");
        panel8.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 360, 60, 20));

        panel11.setBackground(new java.awt.Color(247, 247, 247));
        panel11.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        staffIdTextField.setBackground(new java.awt.Color(247, 247, 247));
        staffIdTextField.setBorder(null);
        staffIdTextField.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        staffIdTextField.setOpaque(true);
        panel11.add(staffIdTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 0, 180, 30));

        panel8.add(panel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 80, 200, 30));

        panel12.setBackground(new java.awt.Color(247, 247, 247));
        panel12.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        fullnameTextField.setBackground(new java.awt.Color(247, 247, 247));
        fullnameTextField.setBorder(null);
        fullnameTextField.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        fullnameTextField.setOpaque(true);
        panel12.add(fullnameTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 0, 180, 30));
        ((PlainDocument) fullnameTextField.getDocument()).setDocumentFilter(new CharacterOnlyFilter());

        panel8.add(panel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 130, 200, -1));

        panel13.setBackground(new java.awt.Color(247, 247, 247));
        panel13.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        passwordTextField.setBackground(new java.awt.Color(247, 247, 247));
        passwordTextField.setBorder(null);
        passwordTextField.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        passwordTextField.setOpaque(true);
        panel13.add(passwordTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 0, 180, 30));

        panel8.add(panel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 180, 200, -1));

        panel18.setBackground(new java.awt.Color(247, 247, 247));
        panel18.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        ageTextField.setBackground(new java.awt.Color(247, 247, 247));
        ageTextField.setBorder(null);
        ageTextField.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        ageTextField.setOpaque(true);
        panel18.add(ageTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 0, 180, 30));
        ((PlainDocument) ageTextField.getDocument()).setDocumentFilter(new NumberOnlyFilter());

        panel8.add(panel18, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 230, 200, -1));

        panel20.setBackground(new java.awt.Color(247, 247, 247));
        panel20.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        phoneTextField.setBackground(new java.awt.Color(247, 247, 247));
        phoneTextField.setBorder(null);
        phoneTextField.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        phoneTextField.setOpaque(true);
        panel20.add(phoneTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 0, 180, 30));
        ((PlainDocument) phoneTextField.getDocument()).setDocumentFilter(new PhoneNumberFilter());

        panel8.add(panel20, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 330, 200, -1));

        jLabel9.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(51, 0, 0));
        jLabel9.setText("Age");
        panel8.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 210, 60, 20));

        jLabel10.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(51, 0, 0));
        jLabel10.setText("Gender");
        panel8.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 260, 60, 20));

        jLabel11.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(51, 0, 0));
        jLabel11.setText("Phone");
        panel8.add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 310, 60, 20));

        panel21.setBackground(new java.awt.Color(247, 247, 247));
        panel21.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        salaryTextField.setBackground(new java.awt.Color(247, 247, 247));
        salaryTextField.setBorder(null);
        salaryTextField.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        salaryTextField.setOpaque(true);
        panel21.add(salaryTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 0, 180, 30));
        ((PlainDocument) salaryTextField.getDocument()).setDocumentFilter(new DoubleOnlyFilter());

        panel8.add(panel21, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 380, 200, -1));

        maleRadioButton.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        maleRadioButton.setForeground(new java.awt.Color(51, 0, 0));
        maleRadioButton.setText("Male");
        panel8.add(maleRadioButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 290, -1, 20));
        sexGroup = new ButtonGroup();
        sexGroup.add(maleRadioButton);
        sexGroup.add(femaleRadioButton);

        femaleRadioButton.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        femaleRadioButton.setForeground(new java.awt.Color(51, 0, 0));
        femaleRadioButton.setText("Female");
        panel8.add(femaleRadioButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 290, -1, 20));

        content.add(panel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 150, 240, 580));

        panel6.setBackground(new java.awt.Color(20, 9, 148));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(204, 255, 255));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Receptionists Data");

        jLabel12.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/reception.png"))); // NOI18N

        javax.swing.GroupLayout panel6Layout = new javax.swing.GroupLayout(panel6);
        panel6.setLayout(panel6Layout);
        panel6Layout.setHorizontalGroup(
            panel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panel6Layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addComponent(jLabel12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        panel6Layout.setVerticalGroup(
            panel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel6Layout.createSequentialGroup()
                .addGroup(panel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jLabel12, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 40, Short.MAX_VALUE))
                .addGap(0, 0, Short.MAX_VALUE))
        );

        content.add(panel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 90, 240, -1));

        add(content, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 930, 750));
    }// </editor-fold>//GEN-END:initComponents

    private void deleteReceptionistButtonMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_deleteReceptionistButtonMouseMoved
        // TODO add your handling code here:
        deleteReceptionistButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
    }//GEN-LAST:event_deleteReceptionistButtonMouseMoved

    private void updateReceptionistButtonMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_updateReceptionistButtonMouseMoved
        // TODO add your handling code here:
        updateReceptionistButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
    }//GEN-LAST:event_updateReceptionistButtonMouseMoved

    private void updateReceptionistButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateReceptionistButtonActionPerformed
        // TODO add your handling code here:
         int selectedRow = receptionistsTable.getSelectedRow();
        if (selectedRow >= 0) {
            String id = (String)receptionistsTable.getValueAt(selectedRow, 0);
            id=id.substring(1, 5);
             int updatedId=Integer.parseInt(id);
             String name=fullnameTextField.getText();
             String phoneNo=phoneTextField.getText();
             String password=passwordTextField.getText();

             String gender="";
             if(maleRadioButton.isSelected()){
                 gender="Male";
             }else if(femaleRadioButton.isSelected()){
                 gender="Female";
             }
            

           if(name.length()==0 || phoneNo.length()==0 ||password.length()==0|| ageTextField.getText().length()==0 ||salaryTextField.getText().length()==0||gender.length()==0){
                JOptionPane.showMessageDialog(this, "Some Data is missing \nplease provide complete information!!.", "Alert", JOptionPane.WARNING_MESSAGE);
            }else {
               try {
                   int age=Integer.parseInt(ageTextField.getText());
                   double salary=Double.parseDouble(salaryTextField.getText());
                   String url = "jdbc:mysql://localhost:3306/HMS_DB";
                   String username = "mahnat";
                   String passwordDB = "mahnat2023";
                   conn = DriverManager.getConnection(url, username, passwordDB);
                   pstmt=conn.prepareStatement("UPDATE Person set name=(?),age=(?),phone=(?),gender=(?),password=(?) where personId=(?) ");
                   pstmt.setString(1, name);
                   pstmt.setInt(2, age);
                   pstmt.setString(3, phoneNo);
                   pstmt.setString(4, gender);
                   pstmt.setString(5, password);
                   pstmt.setInt(6, updatedId);
                   pstmt.executeUpdate();
                   pstmt=conn.prepareStatement("UPDATE Staff set salary=(?) where staffId=(?) ");
                   pstmt.setDouble(1, salary);
                   pstmt.setInt(2, updatedId);
                   pstmt.executeUpdate();
                   rs.close();
                   pstmt.close();
                   conn.close();
               } catch (SQLException e) {
                   System.out.println(e);
               }
                fetchFromTable();
                staffIdTextField.setText("");
                fullnameTextField.setText("");
                phoneTextField.setText("");
                salaryTextField.setText("");
                passwordTextField.setText("12345678");
                ageTextField.setText("");
                maleRadioButton.setSelected(false);
                femaleRadioButton.setSelected(false);
           }
        } else {
            JOptionPane.showMessageDialog(this, "No rows selected please select a row from the table!!.", "Alert", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_updateReceptionistButtonActionPerformed

    private void newReceptionistButtonMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_newReceptionistButtonMouseMoved
        // TODO add your handling code here:
        newReceptionistButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
    }//GEN-LAST:event_newReceptionistButtonMouseMoved

    private void newReceptionistButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newReceptionistButtonActionPerformed
        // TODO add your handling code here:
         staffIdTextField.setText("");
         fullnameTextField.setText("");
         phoneTextField.setText("");
         salaryTextField.setText("");
         passwordTextField.setText("12345678");
         ageTextField.setText("");
         maleRadioButton.setSelected(false);
         femaleRadioButton.setSelected(false);
    }//GEN-LAST:event_newReceptionistButtonActionPerformed

    private void addReceptionistButtonMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_addReceptionistButtonMouseMoved
        // TODO add your handling code here:
        addReceptionistButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
    }//GEN-LAST:event_addReceptionistButtonMouseMoved

    private void addReceptionistButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addReceptionistButtonActionPerformed
        // TODO add your handling code here:
        String name=fullnameTextField.getText();
        String phoneNo=phoneTextField.getText();
        String password=passwordTextField.getText();
        
        String gender="";
        if(maleRadioButton.isSelected()){
            gender="Male";
        }else if(femaleRadioButton.isSelected()){
            gender="Female";
        }
        if(name.length()==0 || phoneNo.length()==0 ||password.length()==0|| ageTextField.getText().length()==0 ||salaryTextField.getText().length()==0||gender.length()==0){
           JOptionPane.showMessageDialog(this, "Some Data is missing \nplease provide complete information!!.", "Alert", JOptionPane.WARNING_MESSAGE);
        }else{
            try {
                int age=Integer.parseInt(ageTextField.getText());
                double salary=Double.parseDouble(salaryTextField.getText());
                String url = "jdbc:mysql://localhost:3306/HMS_DB";
                String username = "mahnat";
                String passwordDB = "mahnat2023";
                conn = DriverManager.getConnection(url, username, passwordDB);
                pstmt=conn.prepareStatement("Insert Into Person (name,age,phone,gender,password) values(?,?,?,?,?)",Statement.RETURN_GENERATED_KEYS);
                pstmt.setString(1, name);
                pstmt.setInt(2, age);
                pstmt.setString(3, phoneNo);
                pstmt.setString(4, gender);
                pstmt.setString(5, password);
                pstmt.executeUpdate();
                rs=pstmt.getGeneratedKeys();
                rs.next();
                int lastInsertedId=rs.getInt(1);
                pstmt=conn.prepareStatement("Insert Into Staff (staffId,salary) values(?,?)");
                pstmt.setInt(1, lastInsertedId);
                pstmt.setDouble(2, salary);
                pstmt.executeUpdate();
                pstmt=conn.prepareStatement("Insert Into Receptionist (staffId) values(?)");
                pstmt.setInt(1, lastInsertedId);
                pstmt.executeUpdate();
 
                rs.close();
                pstmt.close();
                conn.close();
            } catch (SQLException e) {
                System.out.println(e);
            }
             fetchFromTable();
            staffIdTextField.setText("");
            fullnameTextField.setText("");
            phoneTextField.setText("");
            salaryTextField.setText("");
            passwordTextField.setText("12345678");
            ageTextField.setText("");
            maleRadioButton.setSelected(false);
            femaleRadioButton.setSelected(false);
        }
    }//GEN-LAST:event_addReceptionistButtonActionPerformed

    private void receptionistsTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_receptionistsTableMouseClicked
        // TODO add your handling code here:
        int row = receptionistsTable.getSelectedRow();
        if(row>=0){
            String id=(String)receptionistsTable.getValueAt(row, 0);
            String name=(String)receptionistsTable.getValueAt(row, 1);
            String age=String.valueOf(receptionistsTable.getValueAt(row, 2));
            String gender=(String)receptionistsTable.getValueAt(row, 3);
            String phoneNo=(String)receptionistsTable.getValueAt(row, 4);
            String password=(String)receptionistsTable.getValueAt(row, 5);
            String salary=String.valueOf(receptionistsTable.getValueAt(row, 6));
            staffIdTextField.setText(id);
            fullnameTextField.setText(name);
            ageTextField.setText(String.valueOf(age));
            if(gender.equals("Male")){
                maleRadioButton.setSelected(true);
            }else{
                femaleRadioButton.setSelected(true);
            }
            passwordTextField.setText(password);
            phoneTextField.setText(phoneNo);
            salaryTextField.setText(salary);
            }
    }//GEN-LAST:event_receptionistsTableMouseClicked

    private void serchTextFieldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_serchTextFieldKeyReleased
        // TODO add your handling code here:
        if (serchTextField.getText().length() != 0) {
            try {
                 String url = "jdbc:mysql://localhost:3306/HMS_DB";
                 String username = "mahnat";
                 String passwordDB = "mahnat2023";
                 conn = DriverManager.getConnection(url, username, passwordDB);
                String searchText = serchTextField.getText();
                String idPattern = "R\\d{4}/15";
                
                if(searchText.matches(idPattern)){
                    String query = "SELECT R.staffId,P.name,P.age,P.gender,P.phone,P.password,S.salary FROM Person P join Staff S on P.personId=S.staffID join Receptionist R on S.staffId=R.staffId WHERE R.staffId LIKE (?);";
                    pstmt=conn.prepareStatement(query);
                    pstmt.setInt(1, Integer.parseInt(searchText.substring(1, 5)));
                    rs = pstmt.executeQuery();
                }else{
                     String query = "SELECT R.staffId,P.name,P.age,P.gender,P.phone,P.password,S.salary FROM Person P join Staff S on P.personId=S.staffID join Receptionist R on S.staffId=R.staffId WHERE P.name LIKE (?) or R.staffId LIKE (?) or P.phone like (?);";
                    pstmt=conn.prepareStatement(query);
                    pstmt.setString(1, searchText+"%");
                    pstmt.setString(2, searchText+"%");
                    pstmt.setString(3, searchText+"%");
                    rs = pstmt.executeQuery();
                }
               
                
                
               DefaultTableModel model = new DefaultTableModel() {
                @Override
                public boolean isCellEditable(int row, int column) {
                    return false; // Make all cells non-editable
                }
                };
                model.addColumn("Id");
                model.addColumn("FullName");
                model.addColumn("Age");
                model.addColumn("Gender");
                model.addColumn("Phone no");
                model.addColumn("Password");
                model.addColumn("Salary");

            while (rs.next()) {
                int id=rs.getInt(1);
                String receptionistId="";
                if (id < 10) {
                    receptionistId += "A000" + id + "/15";
                } else if (id < 100 && id >= 10) {
                    receptionistId += "A00" + id + "/15";
                } else if (id < 1000 && id >= 100) {
                    receptionistId += "A0" + id + "/15";
                }
                String name=rs.getString(2);
                int age=rs.getInt(3);
                String gender=rs.getString(4);
                String phoneNo=rs.getString(5);
                String password=rs.getString(6);
                double salary=rs.getDouble(7);
                model.addRow(new Object[]{receptionistId, name, age, gender,phoneNo,password,salary});
                }
                
                receptionistsTable.setModel(model);
                rs.close();
                pstmt.close();
                conn.close();
            } catch (SQLException e) {
                System.out.println(e);
            }
        } else {
                fetchFromTable();
            
        }
    }//GEN-LAST:event_serchTextFieldKeyReleased

    private void deleteReceptionistButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteReceptionistButtonActionPerformed
        // TODO add your handling code here:
         int selectedRow = receptionistsTable.getSelectedRow();
        if (selectedRow >= 0) {
             String id = (String)receptionistsTable.getValueAt(selectedRow, 0);
            int result=JOptionPane.showConfirmDialog(this, "Are you sure you want to delete the admin with id "+id+"?","Are you sure you want to delete the Admin?",JOptionPane.YES_NO_OPTION,JOptionPane.QUESTION_MESSAGE);
              id=id.substring(1, 5);
             int deletId=Integer.parseInt(id);
                if(result==JOptionPane.YES_OPTION){
                    try {
                        String url = "jdbc:mysql://localhost:3306/HMS_DB";
                        String username = "mahnat";
                        String passwordDB = "mahnat2023";
                        conn = DriverManager.getConnection(url, username, passwordDB);
                        pstmt=conn.prepareStatement("delete from Receptionist where staffId=?");
                        pstmt.setInt(1, deletId);
                        pstmt.executeUpdate();
                        pstmt=conn.prepareStatement("delete from Staff where staffId=?");
                        pstmt.setInt(1, deletId);
                        pstmt.executeUpdate();
                        pstmt=conn.prepareStatement("delete from Person where personId=?");
                        pstmt.setInt(1, deletId);
                        pstmt.executeUpdate();
                        pstmt.close();
                        conn.close();
                         
                }catch (SQLException e) {
                        System.out.println(e);
                     }
                    fetchFromTable();
                    staffIdTextField.setText("");
                    fullnameTextField.setText("");
                    phoneTextField.setText("");
                    salaryTextField.setText("");
                    passwordTextField.setText("12345678");
                    ageTextField.setText("");
                    maleRadioButton.setSelected(false);
                    femaleRadioButton.setSelected(false);
            } 

        } else {
            JOptionPane.showMessageDialog(this, "No rows selected please select a row from the table!!.", "Alert", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_deleteReceptionistButtonActionPerformed

    public void fetchFromTable() {
        try {
             String url = "jdbc:mysql://localhost:3306/HMS_DB";
             String username = "mahnat";
             String passwordDB = "mahnat2023";
            conn = DriverManager.getConnection(url, username, passwordDB);
            stmt = conn.createStatement();
            rs = stmt.executeQuery("SELECT R.staffId,P.name,P.age,P.gender,P.phone,P.password,S.salary FROM Person P join Staff S on P.personId=S.staffID join Receptionist R on S.staffId=R.staffId;");

            DefaultTableModel model = new DefaultTableModel() {
                @Override
                public boolean isCellEditable(int row, int column) {
                    return false; // Make all cells non-editable
                }
            };
            model.addColumn("Id");
            model.addColumn("FullName");
            model.addColumn("Age");
            model.addColumn("Gender");
            model.addColumn("Phone no");
            model.addColumn("Password");
            model.addColumn("Salary");

        while (rs.next()) {
            int id=rs.getInt(1);
            String adminId="";
            if (id < 10) {
                adminId += "R000" + id + "/15";
            } else if (id < 100 && id >= 10) {
                adminId += "R00" + id + "/15";
            } else if (id < 1000 && id >= 100) {
                adminId += "R0" + id + "/15";
            }
            String name=rs.getString(2);
            int age=rs.getInt(3);
            String gender=rs.getString(4);
            String phoneNo=rs.getString(5);
            String password=rs.getString(6);
            double salary=rs.getDouble(7);
            model.addRow(new Object[]{adminId, name, age, gender,phoneNo,password,salary});
        }

        receptionistsTable.setModel(model);

        rs.close();
        stmt.close();
        conn.close();
        } catch (SQLException e) {
            System.out.println(e);
        }
       
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private GUI.CustomStyle.MyButton addReceptionistButton;
    private javax.swing.JTextField ageTextField;
    private GUI.CustomStyle.Panel content;
    private GUI.CustomStyle.MyButton deleteReceptionistButton;
    private javax.swing.JRadioButton femaleRadioButton;
    private javax.swing.JTextField fullnameTextField;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JRadioButton maleRadioButton;
    private ButtonGroup sexGroup;
    private GUI.CustomStyle.MyButton newReceptionistButton;
    private GUI.CustomStyle.Panel panel1;
    private GUI.CustomStyle.Panel panel11;
    private GUI.CustomStyle.Panel panel12;
    private GUI.CustomStyle.Panel panel13;
    private GUI.CustomStyle.Panel panel14;
    private GUI.CustomStyle.Panel panel18;
    private GUI.CustomStyle.Panel panel20;
    private GUI.CustomStyle.Panel panel21;
    private GUI.CustomStyle.Panel panel6;
    private GUI.CustomStyle.Panel panel7;
    private GUI.CustomStyle.Panel panel8;
    private GUI.CustomStyle.Panel panel9;
    private javax.swing.JTextField passwordTextField;
    private javax.swing.JTextField phoneTextField;
    private javax.swing.JTable receptionistsTable;
    private javax.swing.JTextField salaryTextField;
    private javax.swing.JTextField serchTextField;
    private javax.swing.JTextField staffIdTextField;
    private GUI.CustomStyle.MyButton updateReceptionistButton;
    // End of variables declaration//GEN-END:variables
}
