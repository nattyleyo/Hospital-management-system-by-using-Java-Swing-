/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package GUI.ReceptionistSide;

import GUI.CharacterOnlyFilter;
import GUI.NumberOnlyFilter;
import GUI.PhoneNumberFilter;
import GUI.AddressFilter;
import java.awt.Color;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.*;
import javax.swing.ButtonGroup;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.JTableHeader;
import javax.swing.text.PlainDocument;

/**
 *
 * @author HP
 */
public class Patients extends javax.swing.JPanel {

    private Connection conn;
    private Statement stmt;
    private PreparedStatement pstmt;
    private ResultSet rs;
    /**
     * Creates new form AdminEmployeed
     */
    public Patients() {
        initComponents();
        JTableHeader tableHeader=patientsTable.getTableHeader();
        tableHeader.setForeground(new Color(204,255,255));
        tableHeader.setBackground(new Color(82,2,31));
        patientIDTextField.setEditable(false);
        passwordTextField.setText("12345678");
        
        try{
            Class.forName("com.mysql.cj.jdbc.Driver");
        String url = "jdbc:mysql://localhost:3306/HMS_DB";
        String username = "mahnat";
        String password = "mahnat2023";
        conn = DriverManager.getConnection(url, username, password);

        stmt = conn.createStatement();
       
        String createTableQuery="CREATE TABLE if not exists Patient (" +
                                "  patientId int PRIMARY KEY," +
                                "  checkInStatus BOOLEAN," +
                                "  address VARCHAR(30)," +
                                "  bill DOUBLE," +
                                "  checkInValue VARCHAR(20)," +
                                "  FOREIGN KEY (patientId) REFERENCES Person(personId)" +
                                ");";
        stmt.executeUpdate(createTableQuery);        
        
        fetchFromTable();
        stmt.close();
        conn.close();
        }catch(ClassNotFoundException | SQLException e){
            System.out.println(e);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        content = new GUI.CustomStyle.Panel();
        panel1 = new GUI.CustomStyle.Panel();
        Rec_PatientSearchPlaceholder = new javax.swing.JLabel();
        searchTextField = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        panel6 = new GUI.CustomStyle.Panel();
        jLabel1 = new javax.swing.JLabel();
        panel7 = new GUI.CustomStyle.Panel();
        jScrollPane1 = new javax.swing.JScrollPane();
        patientsTable = new javax.swing.JTable();
        panel8 = new GUI.CustomStyle.Panel();
        panel9 = new GUI.CustomStyle.Panel();
        jLabel3 = new javax.swing.JLabel();
        deletePatientButton = new GUI.CustomStyle.MyButton();
        updatePatientButton = new GUI.CustomStyle.MyButton();
        newPatientButton = new GUI.CustomStyle.MyButton();
        addPatientButton = new GUI.CustomStyle.MyButton();
        panel14 = new GUI.CustomStyle.Panel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        panel11 = new GUI.CustomStyle.Panel();
        addressTextField = new javax.swing.JTextField();
        panel12 = new GUI.CustomStyle.Panel();
        passwordTextField = new javax.swing.JTextField();
        panel18 = new GUI.CustomStyle.Panel();
        patientIDTextField = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        panel21 = new GUI.CustomStyle.Panel();
        ageTextField = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        maleRadioButton = new javax.swing.JRadioButton();
        femaleRadioButton = new javax.swing.JRadioButton();
        panel13 = new GUI.CustomStyle.Panel();
        phoneNoTextField = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        panel15 = new GUI.CustomStyle.Panel();
        fullNameTextField1 = new javax.swing.JTextField();

        content.setBackground(new java.awt.Color(190, 247, 255));
        content.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        panel1.setBackground(new java.awt.Color(255, 255, 255));
        panel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        Rec_PatientSearchPlaceholder.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        Rec_PatientSearchPlaceholder.setForeground(new java.awt.Color(153, 153, 153));
        Rec_PatientSearchPlaceholder.setText("Search by PatientI D or Name");
        panel1.add(Rec_PatientSearchPlaceholder, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 0, 190, 40));

        searchTextField.setBackground(new java.awt.Color(255, 255, 255));
        searchTextField.setBorder(null);
        searchTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                searchTextFieldKeyReleased(evt);
            }
        });
        panel1.add(searchTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 0, 600, 40));

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/search.png"))); // NOI18N
        panel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 6, 26, 28));

        content.add(panel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 20, 660, 40));

        jLabel8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/patient.png"))); // NOI18N
        content.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 70, 70, -1));

        panel6.setBackground(new java.awt.Color(20, 9, 148));
        panel6.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(204, 255, 255));
        jLabel1.setText("Patients Data");
        panel6.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 0, 170, 40));

        content.add(panel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 90, 260, 40));

        panel7.setBackground(new java.awt.Color(255, 204, 204));

        patientsTable.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        patientsTable.setForeground(new java.awt.Color(51, 51, 51));
        patientsTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "PatientId", "FullName", "Age", "Gender", "Bill", "Password", "Phone", "Address", "Check-In status"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.Integer.class, java.lang.String.class, java.lang.Double.class, java.lang.Object.class, java.lang.Integer.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        patientsTable.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        patientsTable.setEditingColumn(0);
        patientsTable.setEditingRow(0);
        patientsTable.setFocusable(false);
        patientsTable.setGridColor(new java.awt.Color(204, 204, 255));
        patientsTable.setOpaque(false);
        patientsTable.setRowHeight(25);
        patientsTable.setSelectionBackground(new java.awt.Color(255, 239, 235));
        patientsTable.setSelectionForeground(new java.awt.Color(0, 51, 255));
        patientsTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                patientsTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(patientsTable);

        javax.swing.GroupLayout panel7Layout = new javax.swing.GroupLayout(panel7);
        panel7.setLayout(panel7Layout);
        panel7Layout.setHorizontalGroup(
            panel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panel7Layout.createSequentialGroup()
                .addContainerGap(15, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 731, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(14, 14, 14))
        );
        panel7Layout.setVerticalGroup(
            panel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panel7Layout.createSequentialGroup()
                .addContainerGap(23, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 533, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(14, 14, 14))
        );

        content.add(panel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 150, 760, 570));

        panel8.setBackground(new java.awt.Color(255, 204, 204));
        panel8.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        panel9.setBackground(new java.awt.Color(82, 2, 31));

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(204, 255, 255));
        jLabel3.setText("USERNAME -->Data");

        javax.swing.GroupLayout panel9Layout = new javax.swing.GroupLayout(panel9);
        panel9.setLayout(panel9Layout);
        panel9Layout.setHorizontalGroup(
            panel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel9Layout.createSequentialGroup()
                .addGap(51, 51, 51)
                .addComponent(jLabel3)
                .addContainerGap(44, Short.MAX_VALUE))
        );
        panel9Layout.setVerticalGroup(
            panel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panel9Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        panel8.add(panel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 240, 40));

        deletePatientButton.setBackground(new java.awt.Color(23, 169, 232));
        deletePatientButton.setBorder(null);
        deletePatientButton.setForeground(new java.awt.Color(255, 255, 255));
        deletePatientButton.setText("DELETE");
        deletePatientButton.setBorderColor(new java.awt.Color(255, 204, 204));
        deletePatientButton.setColor(new java.awt.Color(23, 169, 232));
        deletePatientButton.setColorClick(new java.awt.Color(23, 133, 232));
        deletePatientButton.setColorOver(new java.awt.Color(0, 133, 218));
        deletePatientButton.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        deletePatientButton.setRadius(20);
        deletePatientButton.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                deletePatientButtonMouseMoved(evt);
            }
        });
        deletePatientButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deletePatientButtonActionPerformed(evt);
            }
        });
        panel8.add(deletePatientButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 500, 93, 37));

        updatePatientButton.setBackground(new java.awt.Color(23, 169, 232));
        updatePatientButton.setBorder(null);
        updatePatientButton.setForeground(new java.awt.Color(255, 255, 255));
        updatePatientButton.setText("UPDATE");
        updatePatientButton.setBorderColor(new java.awt.Color(255, 204, 204));
        updatePatientButton.setColor(new java.awt.Color(23, 169, 232));
        updatePatientButton.setColorClick(new java.awt.Color(23, 133, 232));
        updatePatientButton.setColorOver(new java.awt.Color(0, 133, 218));
        updatePatientButton.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        updatePatientButton.setRadius(20);
        updatePatientButton.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                updatePatientButtonMouseMoved(evt);
            }
        });
        updatePatientButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updatePatientButtonActionPerformed(evt);
            }
        });
        panel8.add(updatePatientButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 500, 98, 37));

        newPatientButton.setBackground(new java.awt.Color(23, 169, 232));
        newPatientButton.setBorder(null);
        newPatientButton.setForeground(new java.awt.Color(255, 255, 255));
        newPatientButton.setText("NEW");
        newPatientButton.setBorderColor(new java.awt.Color(255, 204, 204));
        newPatientButton.setColor(new java.awt.Color(23, 169, 232));
        newPatientButton.setColorClick(new java.awt.Color(23, 133, 232));
        newPatientButton.setColorOver(new java.awt.Color(0, 133, 218));
        newPatientButton.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        newPatientButton.setRadius(20);
        newPatientButton.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                newPatientButtonMouseMoved(evt);
            }
        });
        newPatientButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newPatientButtonActionPerformed(evt);
            }
        });
        panel8.add(newPatientButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 450, 93, 37));

        addPatientButton.setBackground(new java.awt.Color(23, 169, 232));
        addPatientButton.setBorder(null);
        addPatientButton.setForeground(new java.awt.Color(255, 255, 255));
        addPatientButton.setText("ADD");
        addPatientButton.setBorderColor(new java.awt.Color(255, 204, 204));
        addPatientButton.setColor(new java.awt.Color(23, 169, 232));
        addPatientButton.setColorClick(new java.awt.Color(23, 133, 232));
        addPatientButton.setColorOver(new java.awt.Color(0, 133, 218));
        addPatientButton.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        addPatientButton.setRadius(20);
        addPatientButton.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                addPatientButtonMouseMoved(evt);
            }
        });
        addPatientButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addPatientButtonActionPerformed(evt);
            }
        });
        panel8.add(addPatientButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 450, 98, 37));

        panel14.setBackground(new java.awt.Color(247, 247, 247));

        javax.swing.GroupLayout panel14Layout = new javax.swing.GroupLayout(panel14);
        panel14.setLayout(panel14Layout);
        panel14Layout.setHorizontalGroup(
            panel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 220, Short.MAX_VALUE)
        );
        panel14Layout.setVerticalGroup(
            panel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        panel8.add(panel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 70, 220, -1));

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(51, 0, 0));
        jLabel4.setText("FullName");
        panel8.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 110, 60, 20));

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(51, 0, 0));
        jLabel5.setText("Password");
        panel8.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 160, 60, 20));

        jLabel7.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(51, 0, 0));
        jLabel7.setText("PatientId");
        panel8.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 60, 60, 20));

        panel11.setBackground(new java.awt.Color(247, 247, 247));
        panel11.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        addressTextField.setBackground(new java.awt.Color(247, 247, 247));
        addressTextField.setBorder(null);
        addressTextField.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        addressTextField.setOpaque(true);
        panel11.add(addressTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 0, 180, 30));
        ((PlainDocument) addressTextField.getDocument()).setDocumentFilter(new AddressFilter());

        panel8.add(panel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 400, 200, 30));

        panel12.setBackground(new java.awt.Color(247, 247, 247));
        panel12.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        passwordTextField.setBackground(new java.awt.Color(247, 247, 247));
        passwordTextField.setBorder(null);
        passwordTextField.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        passwordTextField.setOpaque(true);
        panel12.add(passwordTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 0, 180, 30));

        panel8.add(panel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 180, 200, -1));

        panel18.setBackground(new java.awt.Color(247, 247, 247));
        panel18.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        patientIDTextField.setEditable(false);
        patientIDTextField.setBackground(new java.awt.Color(247, 247, 247));
        patientIDTextField.setBorder(null);
        patientIDTextField.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        patientIDTextField.setOpaque(true);
        panel18.add(patientIDTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 0, 180, 30));

        panel8.add(panel18, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 80, 200, -1));

        jLabel9.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(51, 0, 0));
        jLabel9.setText("Age");
        panel8.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 210, 60, 20));

        panel21.setBackground(new java.awt.Color(247, 247, 247));
        panel21.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        ageTextField.setBackground(new java.awt.Color(247, 247, 247));
        ageTextField.setBorder(null);
        ageTextField.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        ageTextField.setOpaque(true);
        panel21.add(ageTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 0, 180, 30));
        ((PlainDocument) ageTextField.getDocument()).setDocumentFilter(new NumberOnlyFilter());

        panel8.add(panel21, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 230, 200, -1));

        jLabel11.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(51, 0, 0));
        jLabel11.setText("Gender");
        panel8.add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 260, 60, 20));

        maleRadioButton.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        maleRadioButton.setForeground(new java.awt.Color(51, 0, 0));
        maleRadioButton.setText("Male");
        maleRadioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                maleRadioButtonActionPerformed(evt);
            }
        });
        panel8.add(maleRadioButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 290, -1, 20));
        sexGroup = new ButtonGroup();
        sexGroup.add(maleRadioButton);
        sexGroup.add(femaleRadioButton);

        femaleRadioButton.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        femaleRadioButton.setForeground(new java.awt.Color(51, 0, 0));
        femaleRadioButton.setText("Female");
        femaleRadioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                femaleRadioButtonActionPerformed(evt);
            }
        });
        panel8.add(femaleRadioButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 290, -1, 20));

        panel13.setBackground(new java.awt.Color(247, 247, 247));
        panel13.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        phoneNoTextField.setBackground(new java.awt.Color(247, 247, 247));
        phoneNoTextField.setBorder(null);
        phoneNoTextField.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        phoneNoTextField.setOpaque(true);
        panel13.add(phoneNoTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 0, 180, 30));
        ((PlainDocument) phoneNoTextField.getDocument()).setDocumentFilter(new PhoneNumberFilter());

        panel8.add(panel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 330, 200, -1));

        jLabel6.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(51, 0, 0));
        jLabel6.setText("Phone");
        panel8.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 310, 60, 20));

        jLabel12.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(51, 0, 0));
        jLabel12.setText("Address");
        panel8.add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 370, 110, 20));

        panel15.setBackground(new java.awt.Color(247, 247, 247));
        panel15.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        fullNameTextField1.setBackground(new java.awt.Color(247, 247, 247));
        fullNameTextField1.setBorder(null);
        fullNameTextField1.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        fullNameTextField1.setOpaque(true);
        panel15.add(fullNameTextField1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 0, 180, 30));
        ((PlainDocument) fullNameTextField1.getDocument()).setDocumentFilter(new CharacterOnlyFilter());

        panel8.add(panel15, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 130, 200, 30));

        content.add(panel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 150, 240, 570));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(content, javax.swing.GroupLayout.PREFERRED_SIZE, 1041, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 6, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(content, javax.swing.GroupLayout.DEFAULT_SIZE, 732, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void deletePatientButtonMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_deletePatientButtonMouseMoved
        // TODO add your handling code here:
        deletePatientButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
    }//GEN-LAST:event_deletePatientButtonMouseMoved

    private void updatePatientButtonMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_updatePatientButtonMouseMoved
        // TODO add your handling code here:
        updatePatientButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
    }//GEN-LAST:event_updatePatientButtonMouseMoved

    private void updatePatientButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updatePatientButtonActionPerformed
        // TODO add your handling code here:
                int selectedRow = patientsTable.getSelectedRow();
        if (selectedRow >= 0) {
            String id = (String)patientsTable.getValueAt(selectedRow, 0);
            id=id.substring(1, 5);
             int updatedId=Integer.parseInt(id);
             String name=fullNameTextField1.getText();
             String phoneNo=phoneNoTextField.getText();
             String password=passwordTextField.getText();

             String gender="";
             if(maleRadioButton.isSelected()){
                 gender="Male";
             }else if(femaleRadioButton.isSelected()){
                 gender="Female";
             }
            
             String address=addressTextField.getText();
           if(name.length()==0 || phoneNo.length()==0 ||password.length()==0|| ageTextField.getText().length()==0||gender.length()==0||address.length()==0){
                JOptionPane.showMessageDialog(this, "Some Data is missing \nplease provide complete information!!.", "Alert", JOptionPane.WARNING_MESSAGE);
            }else {
               try {
                   int age=Integer.parseInt(ageTextField.getText());
                   String url = "jdbc:mysql://localhost:3306/HMS_DB";
                   String username = "mahnat";
                   String passwordDB = "mahnat2023";
                   conn = DriverManager.getConnection(url, username, passwordDB);
                   pstmt=conn.prepareStatement("UPDATE Person set name=(?),age=(?),phone=(?),gender=(?),password=(?) where personId=(?) ");
                   pstmt.setString(1, name);
                   pstmt.setInt(2, age);
                   pstmt.setString(3, phoneNo);
                   pstmt.setString(4, gender);
                   pstmt.setString(5, password);
                   pstmt.setInt(6, updatedId);
                   pstmt.executeUpdate();
                   pstmt=conn.prepareStatement("UPDATE Patient set address=(?) where patientId=(?) ");
                   pstmt.setString(1, address);
                   pstmt.setInt(2, updatedId);
                   pstmt.executeUpdate();
                   
                   rs.close();
                   pstmt.close();
                   conn.close();
               } catch (SQLException e) {
                   System.out.println(e);
               }
                fetchFromTable();
               patientIDTextField.setText("");
               fullNameTextField1.setText("");
               phoneNoTextField.setText("");
               passwordTextField.setText("12345678");
               ageTextField.setText("");
               maleRadioButton.setSelected(false);
               femaleRadioButton.setSelected(false);
               addressTextField.setText("");
           }
        } else {
            JOptionPane.showMessageDialog(this, "No rows selected please select a row from the table!!.", "Alert", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_updatePatientButtonActionPerformed

    private void newPatientButtonMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_newPatientButtonMouseMoved
        // TODO add your handling code here:
        newPatientButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
    }//GEN-LAST:event_newPatientButtonMouseMoved

    private void newPatientButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newPatientButtonActionPerformed
        // TODO add your handling code here:
        patientIDTextField.setText("");
        fullNameTextField1.setText("");
        phoneNoTextField.setText("");
        passwordTextField.setText("12345678");
        ageTextField.setText("");
        maleRadioButton.setSelected(false);
        femaleRadioButton.setSelected(false);
        addressTextField.setText("");
    }//GEN-LAST:event_newPatientButtonActionPerformed

    private void addPatientButtonMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_addPatientButtonMouseMoved
        // TODO add your handling code here:
        addPatientButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
    }//GEN-LAST:event_addPatientButtonMouseMoved

    private void maleRadioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_maleRadioButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_maleRadioButtonActionPerformed

    private void femaleRadioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_femaleRadioButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_femaleRadioButtonActionPerformed

    private void addPatientButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addPatientButtonActionPerformed
        // TODO add your handling code here:
         String name=fullNameTextField1.getText();
        String phoneNo=phoneNoTextField.getText();
        String password=passwordTextField.getText();
        String address=addressTextField.getText();
        String gender="";
        if(maleRadioButton.isSelected()){
            gender="Male";
            
        }else if(femaleRadioButton.isSelected()){
            gender="Female";
        }
        if(name.length()==0 || phoneNo.length()==0 ||password.length()==0|| ageTextField.getText().length()==0 ||gender.length()==0){
           JOptionPane.showMessageDialog(this, "Some Data is missing \nplease provide complete information!!.", "Alert", JOptionPane.WARNING_MESSAGE);
        }else{
            try {
                int age=Integer.parseInt(ageTextField.getText());
                String url = "jdbc:mysql://localhost:3306/HMS_DB";
                String username = "mahnat";
                String passwordDB = "mahnat2023";
                conn = DriverManager.getConnection(url, username, passwordDB);
                pstmt=conn.prepareStatement("Insert Into Person (name,age,phone,gender,password) values(?,?,?,?,?)",Statement.RETURN_GENERATED_KEYS);
                pstmt.setString(1, name);
                pstmt.setInt(2, age);
                pstmt.setString(3, phoneNo);
                pstmt.setString(4, gender);
                pstmt.setString(5, password);
                pstmt.executeUpdate();
                rs=pstmt.getGeneratedKeys();
                rs.next();
                int lastInsertedId=rs.getInt(1);
                pstmt=conn.prepareStatement("Insert Into Patient (patientId,checkInStatus,address,bill,checkInValue) values(?,?,?,?,?)");
                pstmt.setInt(1, lastInsertedId);
                pstmt.setBoolean(2, true);
                pstmt.setString(3, address);
                pstmt.setDouble(4, 200);
                pstmt.setString(5, "Checked-In");
                pstmt.executeUpdate();
                
 
                rs.close();
                pstmt.close();
                conn.close();
            } catch (SQLException e) {
                System.out.println(e);
            }
            fetchFromTable();
            patientIDTextField.setText("");
            fullNameTextField1.setText("");
            phoneNoTextField.setText("");
            passwordTextField.setText("12345678");
            addressTextField.setText("");
            ageTextField.setText("");
            maleRadioButton.setSelected(false);
            femaleRadioButton.setSelected(false);
        }
    }//GEN-LAST:event_addPatientButtonActionPerformed

    private void patientsTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_patientsTableMouseClicked
        // TODO add your handling code here:
        int row = patientsTable.getSelectedRow();
        if(row>=0){
            String id=(String)patientsTable.getValueAt(row, 0);
            String name=(String)patientsTable.getValueAt(row, 1);
            String age=String.valueOf(patientsTable.getValueAt(row, 2));
            String gender=(String)patientsTable.getValueAt(row, 3);
            String password=(String)patientsTable.getValueAt(row, 5);
            String phoneNo=(String)patientsTable.getValueAt(row, 6);
            String address=(String)patientsTable.getValueAt(row, 7);
            
            patientIDTextField.setText(id);
            fullNameTextField1.setText(name);
            ageTextField.setText(String.valueOf(age));
            if(gender.equals("Male")){
                maleRadioButton.setSelected(true);
            }else{
                femaleRadioButton.setSelected(true);
            }
            passwordTextField.setText(password);
            phoneNoTextField.setText(phoneNo);
            addressTextField.setText(address);
            }
    }//GEN-LAST:event_patientsTableMouseClicked

    private void searchTextFieldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_searchTextFieldKeyReleased
        // TODO add your handling code here:
                     if (searchTextField.getText().length() != 0) {
                try {
                     String url = "jdbc:mysql://localhost:3306/HMS_DB";
                     String username = "mahnat";
                     String passwordDB = "mahnat2023";
                     conn = DriverManager.getConnection(url, username, passwordDB);
                    String searchText = searchTextField.getText();
                    String idPattern = "P\\d{4}/15";

                    if(searchText.matches(idPattern)){
                        String query = "SELECT Pa.patientId,P.name,P.age,P.gender,P.phone,P.password,Pa.address,Pa.bill,Pa.checkInValue FROM Person P join Patient Pa on P.personId=Pa.patientId WHERE Pa.patientId LIKE (?);";
                        pstmt=conn.prepareStatement(query);
                        pstmt.setInt(1, Integer.parseInt(searchText.substring(1, 5)));
                        rs = pstmt.executeQuery();
                    }else{
                         String query = "SELECT Pa.patientId,P.name,P.age,P.gender,P.phone,P.password,Pa.address,Pa.bill,Pa.checkInValue FROM Person P join Patient Pa on P.personId=Pa.patientId WHERE P.name LIKE (?) or Pa.patientId LIKE (?) or P.phone like (?) or P.gender like (?);";
                        pstmt=conn.prepareStatement(query);
                        pstmt.setString(1, searchText+"%");
                        pstmt.setString(2, searchText+"%");
                        pstmt.setString(3, searchText+"%");
                        pstmt.setString(4, searchText+"%");
                        rs = pstmt.executeQuery();
                    }
                    DefaultTableModel model = new DefaultTableModel() {
                    @Override
                    public boolean isCellEditable(int row, int column) {
                        return false; // Make all cells non-editable
                    }
                    };
                    model.addColumn("Id");
                    model.addColumn("FullName");
                    model.addColumn("Age");
                    model.addColumn("Gender");
                    model.addColumn("Bill");
                    model.addColumn("Password");
                    model.addColumn("Phone");
                    model.addColumn("Address");
                    model.addColumn("Check-In status");

                    while (rs.next()) {
                    int id=rs.getInt(1);
                    String patientid="";
                    if (id < 10) {
                        patientid += "P000" + id + "/15";
                    } else if (id < 100 && id >= 10) {
                        patientid += "P00" + id + "/15";
                    } else if (id < 1000 && id >= 100) {
                        patientid += "P0" + id + "/15";
                    }
                    String name=rs.getString(2);
                    int age=rs.getInt(3);
                    String gender=rs.getString(4);
                    String phoneNo=rs.getString(5);
                    String password=rs.getString(6);
                    String address=rs.getString(7);
                    double bill=rs.getDouble(8);
                    String checkInValue=rs.getString(9);
                    model.addRow(new Object[]{patientid, name, age, gender,bill,password,phoneNo,address,checkInValue});
                }

                patientsTable.setModel(model);
                rs.close();
                pstmt.close();
                conn.close();
            } catch (SQLException e) {
                System.out.println(e);
            }
        } else {
                fetchFromTable();
        }
    }//GEN-LAST:event_searchTextFieldKeyReleased

    private void deletePatientButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deletePatientButtonActionPerformed
        // TODO add your handling code here:
          int selectedRow = patientsTable.getSelectedRow();
        if (selectedRow >= 0) {
             String id = (String)patientsTable.getValueAt(selectedRow, 0);
            int result=JOptionPane.showConfirmDialog(this, "Are you sure you want to delete the doctor with id "+id+"?","Are you sure you want to delete the Doctor?",JOptionPane.YES_NO_OPTION,JOptionPane.QUESTION_MESSAGE);
              id=id.substring(1, 5);
             int deletId=Integer.parseInt(id);
                if(result==JOptionPane.YES_OPTION){
                    try {
                        String url = "jdbc:mysql://localhost:3306/HMS_DB";
                        String username = "mahnat";
                        String passwordDB = "mahnat2023";
                        conn = DriverManager.getConnection(url, username, passwordDB);
                        pstmt=conn.prepareStatement("delete from Patient where patientId=?");
                        pstmt.setInt(1, deletId);
                        pstmt.executeUpdate();
                        pstmt=conn.prepareStatement("delete from Person where personId=?");
                        pstmt.setInt(1, deletId);
                        pstmt.executeUpdate();
                        pstmt.close();
                        conn.close();
                         
                }catch (SQLException e) {
                        System.out.println(e);
                     }
                    fetchFromTable();
                    patientIDTextField.setText("");
                    fullNameTextField1.setText("");
                    phoneNoTextField.setText("");
                    passwordTextField.setText("12345678");
                    addressTextField.setText("");
                    ageTextField.setText("");
                    maleRadioButton.setSelected(false);
                    femaleRadioButton.setSelected(false);
            } 
        }else {
            JOptionPane.showMessageDialog(this, "No rows selected please select a row from the table!!.", "Alert", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_deletePatientButtonActionPerformed

       public void fetchFromTable() {
        try {
             String url = "jdbc:mysql://localhost:3306/HMS_DB";
             String username = "mahnat";
             String passwordDB = "mahnat2023";
            conn = DriverManager.getConnection(url, username, passwordDB);
            stmt = conn.createStatement();
            rs = stmt.executeQuery("SELECT Pa.patientId,P.name,P.age,P.gender,P.phone,P.password,Pa.address,Pa.bill,Pa.checkInValue FROM Person P join Patient Pa on P.personId=Pa.patientId;");

            DefaultTableModel model = new DefaultTableModel() {
                @Override
                public boolean isCellEditable(int row, int column) {
                    return false; // Make all cells non-editable
                }
            };
            model.addColumn("Id");
            model.addColumn("FullName");
            model.addColumn("Age");
            model.addColumn("Gender");
            model.addColumn("Bill");
            model.addColumn("Password");
            model.addColumn("Phone");
            model.addColumn("Address");
            model.addColumn("Check-In status");

        while (rs.next()) {
            int id=rs.getInt(1);
            String patientid="";
            if (id < 10) {
                patientid += "P000" + id + "/15";
            } else if (id < 100 && id >= 10) {
                patientid += "P00" + id + "/15";
            } else if (id < 1000 && id >= 100) {
                patientid += "P0" + id + "/15";
            }
            String name=rs.getString(2);
            int age=rs.getInt(3);
            String gender=rs.getString(4);
            String phoneNo=rs.getString(5);
            String password=rs.getString(6);
            String address=rs.getString(7);
            double bill=rs.getDouble(8);
            String checkInValue=rs.getString(9);
            model.addRow(new Object[]{patientid, name, age, gender,bill,password,phoneNo,address,checkInValue});
        }

        patientsTable.setModel(model);

        rs.close();
        stmt.close();
        conn.close();
        } catch (SQLException e) {
            System.out.println(e);
        }
       
    }
       
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Rec_PatientSearchPlaceholder;
    private GUI.CustomStyle.MyButton addPatientButton;
    private javax.swing.JTextField addressTextField;
    private javax.swing.JTextField ageTextField;
    private GUI.CustomStyle.Panel content;
    private GUI.CustomStyle.MyButton deletePatientButton;
    private javax.swing.JRadioButton femaleRadioButton;
    private javax.swing.JTextField fullNameTextField1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JRadioButton maleRadioButton;
    private ButtonGroup sexGroup;
    private GUI.CustomStyle.MyButton newPatientButton;
    private GUI.CustomStyle.Panel panel1;
    private GUI.CustomStyle.Panel panel11;
    private GUI.CustomStyle.Panel panel12;
    private GUI.CustomStyle.Panel panel13;
    private GUI.CustomStyle.Panel panel14;
    private GUI.CustomStyle.Panel panel15;
    private GUI.CustomStyle.Panel panel18;
    private GUI.CustomStyle.Panel panel21;
    private GUI.CustomStyle.Panel panel6;
    private GUI.CustomStyle.Panel panel7;
    private GUI.CustomStyle.Panel panel8;
    private GUI.CustomStyle.Panel panel9;
    private javax.swing.JTextField passwordTextField;
    private javax.swing.JTextField patientIDTextField;
    private javax.swing.JTable patientsTable;
    private javax.swing.JTextField phoneNoTextField;
    private javax.swing.JTextField searchTextField;
    private GUI.CustomStyle.MyButton updatePatientButton;
    // End of variables declaration//GEN-END:variables
}
